<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAABGdBTUEAALGPC/xhBQAAGg1JREFUeF7t
        3Ql4VNW9AHAEFyRhljt3X2bJQthBKIhC3ZUC9mnV2tb6XFrbvraKCtb2dXtuba2i1gUIEAj7GhABERHZ
        dwQk20zWyQqEJJPJZCUh/N//nFxS+LD9+toKyPv/vu9+M/fkzF3m/s85/3NnknQjhBBCCCGEEEIIIYQQ
        QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
        QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
        8jfl1DWKWZFGy14l5P+PvIa2m0P1HSsy61o+zKk/OcIuJuTyl1vf3KO4CV4pqG+vCUZbq/IaTr/0eV1L
        D/vHhFze8htPDS+OndofirZBQawN8qMnd4SaTtMoQC5/wVjr1djz/7Eg0tyWW4/BHzsFebVNdUXN8D92
        FUIuX4WNp8cXRlpDwUgzBGPt2Pu3Q2H0JORFW/eHmjpG2dUIufyEGtrk4tjpVfmRkxDChaU/LPgLG9oh
        N9LUlBNr+51dlZDLT35Txw8Loq31wbrOnj8cbYWius6GkBdrgdxo68b9tc397eqEXD6yYu2+/NjJlcEo
        Bnr9KSjCpRTToOL6Vkx/miGvCUeF+taivSeafmq/hJDLw76alqszYzA7WA8Y8ABFduCHIu1QFAXIbWyE
        Qlzya041fVYN768tiZr2Swn56ttV3X7v7oqm5k2ljbC5LAZby2rwMQKbymOwJdwMW8rr4dPKOvikrAG2
        lDXDyvzI+lnZx75pv5yQr65t1a3u7eVN21bn1cKCIC6hE7AoVAXzg7jkRWBJdj0sz22A9GAE5hbUwuL8
        GLx1qBz+cqgsZ8qho/H2Zgj5atpVe/r5rSV1kFFQB3PzozArVAtzQhGYlVMLs3PrYUFOFObkNMKM7BjM
        ya2D6cEGmLz3GPxmVwm8ur+KPhsgX127oqfN7RWNpRuKamFNaRMsK2qAubkRHAnqYF5WBBbmNMCSnBqY
        GarH502w9HAUphyKwk/31MJTWyrhhZ0VZS/sP0pfliNfPVujHfF76+C1j4sjsCEchQ3ljfBBcQMszcU0
        J7sGlwgsw95/cdZxHBVOwFKcIS/YVwu/334Mfr4zAhO3VcOk7eXwwt7yGfYmCfnq2BqD72yvbK75sDgK
        n+Dkd2O4HjYU18MHBfXY6+NcAHv+hdgYFmVHIT1UDbOD1fA6pj7Pbz4Kz+yswuU4TNx+FH6zvaj613uO
        3WlvlpBL3+rqk1dsjXSkrS+sgzXhRthU1gQf5ddiI4jBR6UtsDhUh0FfA2k4EZ4XbOeN4c3cSpi0pwKe
        3XwcfrHjGDy1swQmbT0KT+8Iw4s7Kpbamybk0resstW7tjga3oDB/jHm/5+UxPgo8GFBhI8E64twHnC4
        HBbhhHgpNoJUTIde/KwGgx0Df1s5TN5RAc/tPAZPbzsGz24ph1/tKI09v/f4TfbmCbl0vZlXc+W84tib
        K/NONK2tqIYPw02woawNe/6TsL6klT+uwcdlhS2QHoxh7x+Btw7WwK93VmPAV/Ggn4TzgEnbjsOzW3F9
        01F4cnsl/HZv1dbnDlT3tHdDyKXplezapHnhk59uyGtu2FJxAtgkeFMJzgMKq2FLSR1sKqqBDUV18BGm
        RQuzjsG0rBi8vOcEpjvY42/Hx1218OyOKt4AJm+vhue21sNT+6vhyW1H4bl9J35s74aQS88Te8rjf5dV
        /0J64enSdcGO9o+KYrCuDPN+toSrYWNZBEeAepwXxGBtWSOsLIzAHw8ch//eUQLPfloEz2wthck7yzD4
        S2DyljD8Ylsp/HLzCRwVcmHS5jJMh8IHf7Sz4ip7d4RcWh74NDztB7vL29nk9bmtFTBpZxVM3MEC+Cj2
        5uU8n2e9+0Q2uf20nOf9aaEYzArWw8zcCMzIqeWPbEnDZTZOjtOy62D6kUqYdeRoy5s5bVU/3XniTXt3
        hFw6Rmfk3zZi9r7G/ssLYOzSHLgtIwvGvF8MN6+qhFszSuCOVfh8eTHcsrISf1YCd6/Ig8m7I5ARaoB1
        hU04UW6AjwujsL6Q3S5tgo3FjfBJQRTnELXwYWkbfFBSfez1/U2xYStCcNf6siH2bgm5+IZ/UOC4fkFo
        pfrmAfDNC8NNy8Jw56oiGL2yFG7D5faVRXy5eWUJLmUwNqMIfrIxDG9l1cKSnDpYU1APm8NR2FIchU3Y
        AFjwbwo3wGacK2zEhvFJcQzer2iGcYtywTk3D0YsCK62d03IxTcgo+DhwJy97Y60fHBPC8KgxQUwISPM
        g/4OXMauLIA7M/LgrtVlcMuKMNyzqhBe3n8CFuZVY7oThSWsp8eJ8oayKJ8zrC1rhnWljbiOz0sAG0Yp
        vLT9OLjn5YKcmgnm1H3NKYvzb7d3T8jFk7IidK1v1oFDcTOCIE8PgTj1M7DmhGB0xlHs6fPhdkyD7lhW
        BOOXlcOEFZUwdkke/GRTKcwqaITF2RUwL+84LM6KYSrUBB9WNPKGsDGvCbaFT2IqVAXry9phabAJRi0I
        gmN2HmjTDoM8owiGLgmHkxbnXm0fBiEXR5/l+S/5Zx+KxacWgIS9v2vGYXCmZUPfhflwy+oQjMGc/aY1
        pXD9+6Xw9dVhuH9dGF7NbIF0DPiFmTUwO3QC5hc0w9K8FlhXhOlPuB57/Sb4oKIFVlVE4IOyBnh6Sz4Y
        Mz6DuJnZ4Jp5ABwzcBSY9lkkYWHWs/ZhEHLhJSwJ+lIW5ESkaSFQ3ikD9W0cAWbkQ/z0fDBTQ3Dj8kKc
        7AbhzjVFMGZ9GG5cepDf5pydVQeLM2thaU4M5mWWw9y8WpiXXQUf5h6DnSU1sKmsDj4qx5GgLAKpRyIw
        cn4WON7JB8+0Ygz+bL4Pbcph6LcoXBGYnynZh0PIhTU4o2yWY9ZhcKcGQZ2aA9J7B0CcnQXumdggpmKA
        LjyMKU8p3Ly0FO54vxweXFsMU4MtsDAUhfTMOpiTdxIW5tbDXExx0nKisCA/AmuKIrChoA42F7bCJvz5
        o+vyQJqaCc7UYlCm4yR4eg7IaVj2Nu53ViEkLgy9ah8OIRdOn8WhMf3Tc1rjMfcXsbf3zMyEuLQDED/z
        MPbQhXwyLGHZ9RllcHtGJdy7OA/+sLsG5uXUQkZRDTaASv4LMOx3A5Zn1cPinHpIK6iBuaFKdju0bUP4
        VPO7h6JtgfQj0GtqPqY+eZj7Y3qFo41zRggb2REcaUJgvLu/LGnO4evswyLkwhiyKPiJY/px0N7NBeud
        HAz6THCnZYH49hEsywcZg1Z+F0eFBTkwGifCP/ooDO8dibXN/Px407zc4/yLcItyamBWXhSWHa6FZZlR
        mBmqg9kFJ2B5RWvwL3lNkVtXH+pMeaYX4LYOYFp1AIxUbAzvZYKMcwFt+hGcd1TBoLnZq+zDIuTL539n
        44SBc/dgTxwEc2YQ/Kx3xrTHSA+D770gWDMwRZmdByaOBP7UgzBuec7pybuq8l89FDnwTmbs86mHo7UL
        8pqb04/UNKQXNcOC7LrmeZ9HG1OzGxqmZteVvpUZ3TpxW+XRlFn7QUzDfH9OMaZYB8GalYPPwyDh9rXU
        TNBw3YHzgb5z9p4c/N6n37APj5Avl/dPy03/lI/HBN7bMSaQuuvWxNQ9YxKn7RmXMv3AmP6p+0cPmLX/
        psHpB8aPSD94y83zM++7e+mhOx9Zl2k8uTFb/OWWvKSXdhb1eXVPyfDX94X7v3GgZBgu/f68Lzzgld1F
        gV9tCUo/25ClP5jx+Yjb5h35/ogZ+8YPnbH3joHv7Rg/aOrO8YNT9943ePqe8YOm7Z4wKHXvAwOmbn9w
        yBsb/2PoayuT7cMjhBBCCCGEXKZSxt1zjf2UkHPplvef/vXBa1UjvqfuDfTyJqh20f+JcevdV9hP/60G
        3v4NT9+v3zog6YbRfRJG3tA/MHLUQN/XRg31Dr8+xRp2fYI5dGQPdcCwq6S+Q+KExL4DXP6kfr1Nn7+X
        aiTFyXqCUzEGiJrlszd3jji3IPRyCX587G0X/cMkSadf0rkUGIYVb+jWz3XT/IFqmKNZmaabI3XDfELV
        tJ/JmiawMq8v4SqfP/E5XyDhEcPn+xYrO8Mtqc8rupGv6kaNrBmFHtP3mjuQ3BUU8qCvDZAGXHePvdpF
        HzLySf26EY/r143kf93ZHHFjsnXdyB/y58NH8QBJHPX1HonDbvhuwvCRjyYMG8H/F0DC167vGRg8/HeB
        IcMf9w8ZPp6VMf6hI8f5hw5/MnHY8N+kjBrlYGXJw0cM7TtwUCghIaHNHwjUJiQlRfr269fUv3//U2af
        vr/nL0SC5XvR5/OBaXmrNcOIyKoawfOvNUwzqqjGK4ZhdgWsUxDjnB7xFayTo2laVJKVfLfgedYliF11
        BEEaoUjKY7qmP20apsjKFFm9VhTlH0uS8j1V1u/gFcnFpauGKzEx8URKSkqHrGo/YGWqqj0QCATAsqxS
        SZE9rMznTeiZktL3sN/vB9Pn6/qnFPiaF03TBMMwAB9PY0AAW2TLt9Cu0k1K7n8jBl6jkJB8s13E+VIG
        ZHi9XjD79Mtg62q/gQEMzA4lqc9DvILNnzJgOh4jJPbtv5ut631Srkru2y+PlRmJfX7JKyEjud9jGOjQ
        f8CAusRBgzRW5u8/oB/uuwjPBdg5JSUnN7Djw3odeiDQ9cU4STf+whoAOw/8eZuiqq2sHjs+fD9etKt1
        84jSlYIkp9n18Gcq4Ova2XNBFKfY1bABiPeyY/H7/GVew+INgNF0/TDbpiZrz9tF5GIxDP0KQzN6YyBV
        sAsoqup3WbmiaveyoGYNQFRkhZUFcATo17dfMauHDYBfPMM0+uFFbmWBper6B6Y/8W7DG5jNLjwLJsHy
        3sXqCZZ/pMPhAMvvLxT9AYOVMb6klJV8e4nJ/JdV5ITEJB6oCQmNss83iFdCZiDpT7Isgz8piTcAxe+L
        8ycmZLMgVL2+riBWvIEnWD0M8uPelGSZlVl9kgOKZY1TDON+PKcqtj9ZN96WLWOc6vPyEY/xyPJrfHuq
        mimK0jcEjzhBkqSxiqqMM019DC48RcMgH43H2MLeH3yf0nXDO17RtBVsHTuHBlGWBrN6brsB4HtT67M6
        G4AgeHri9ncrigKaoj3NyshFZuq6iBepnPWmsq7yv6Cg6ep9rJfCgCgTJDdPgUzduDIpKSnILrTps3iv
        a1nGt1mgW16rVtUkPyvD3jY+ITGxnAWTaJq8oUim9XXcR2sijgK6Za2XvBb/Tr7pCyxhwWD4/UvYuhbw
        J7M6yX36tBqWuUvze/m3NjXTepkFLgb9HrbOWD4rn41Gsq5Msou6SZrxCKvn9ftKzASf2y7m3LLUHVOa
        fHZeoqY8Zhd38+idge0W3S97PB6QJGEN/8HfIHg8P2P7wNQo3zINJyvDoDdxxCgKJASaZVn6Tmc94R72
        3uBSaRkq70TcLlcPSZb2stdrivIcKyMXmYU9G16kchbYkqZ8j5XphvZt1hPrul7uEl08l2Yw4LJYwJpe
        87ds3bTM+1mg42ORrIk8VfL6vFdgrr2fXWTJ0PlfalZMgzcAfH0rCwpsaC+xctPrXcgbgM+7mK0bAauP
        P+CPeX2+Rhbciq7wv/GpGvofWM9u+b07+Lqldsdj2MO2JanybFbG4Aj2RufxWMWqpZ9zt8cheFyyovAG
        ICjSw6xM1PTu/IfIJbj/hOd82iMKn9hFX8gtuJ/GkQF0wzhiF7EGoIiS+JCqKberisT/aR9u50E2MlqW
        edQwta75kCTL+9h7o2vqL+wicjFhL6ZgsPHURlTl/2Rl2AC+xQIQU5xWQfSsFWVxCV7kDAw4PvTrps57
        L+wFH2Hr+FiuqJJb05Tufp+3Fw79WawBKYb+MquHvfRQFpgscFjQ4r4aTL/3IZ/fv5Dl0IbXWsG359VT
        cL91rB5LmfBnzaqp/tzr97L0pANHnu2sHqOZ+m/ZMeP+Wz2KvFhQ5Hn4vIE1KFVXX7erdXG6PU5JUfgI
        5pakrhHgDAxs3nhUTY24PMJytyjOxfrLRVGZpCrqlXa1bk6X6yneORj6Pl1V+QhwNlmR+IjiET3fxHM9
        iQ3utKhIayRFWuUWPcuwU2lkrzc0bTJ/Abl4WF7r81pODLoSFhjYAB5h5YaufR97r3a8WBFRFPnEkAUl
        Czaf39egGVpXA8BgP4XlZdjz8RHA7/VekZiQmMm2pxgav8siq9JIDIZWFuy4xHh6ZRpVWCeIwdBheE2e
        AqmGgtMEXxMPMF0/xhohPsZwPwdZsGum8Smrx+Bk0sLXb7MbQRMu9byOru9WNPm8P4/udLp74ggQwnM5
        jXk8HwHO5hE8r2CvHsX91WEjOsWOladLgnzOH9ZyOJ1Ps/1gvUy76AuJoudePI9mXFrsYwQ2iuH+W/h5
        aSr9ZtqlwO+1ZAz2Sgzk05J2pgGo97DhGy9ahyKJqzEYFmEvuAzXG9nFVDSVzwEM3biP9ehYXqwpEv8f
        XQle6xpsAIdZT6zoGk+BZEW8gQUALjXJiYkP42uKMLhO9uzZs/Oui2XMZ/UwcPv4fN5aVhcbwpOY5mSy
        YHE6nfxui2oYW1m9MwzsgVVZmYLB2I6B1oYBnqqo8hf+tpfgFhyqquWzBidK0uN2cRfRI/6Z7QOPp14W
        5TRZkmYrsjwHy5+UJblrBHA4nBNZPdznQU1WzvnsQnC5u+pJ2ADwPNvZ+4PbWY3LQskjLMP3r441LFWR
        qQFcaIqipSjYVYuSZ7hd1C1gmY6EQKCEBZqsKT9hZYamfoddOMPQsWcX+GTS5zV74IX7zG4AfPjWNe27
        du8WVmWhp654eE6dlJiYy4IYR4rOOYAijcCAbsd9dGiqOBQP4dsYaA1Yp403AFPnKRCOFAEvTqhZ45MV
        z92yKl6H84saNiLgvtuwAWxh9c6G8T7YNI0IawCSLPL8G7fTldufIeFQhkFbwANSUXhDPxsG+Z/xZx14
        ThvtInwflPN+gd7pdE1kjZs1ALYuuoXuLoczLr5X74Eul0uXBIF3BPguP9B53Fa5pStdE3JZFnexc5Yl
        sWvyTi4QWVGfwXz6c8zpNzhc8fzi6poShxe+kgWypEr8/juWseEb0xS9UlJcnXeBDO1K7J0zeQNQFd4A
        MFW6n93qwwCsEAUHv+2oK9I1fp/vIEuddL3zXjebGLJeDwMbe2lhICvTdPX32ADacanCOcUiVoYjRQDX
        61hj9EgufgtVVuUfsh4eJ7blmmHwSfDZsAH0x+M/iUsT1r3VLj4P9rhOfucGzwvP4bwRQFHkt1mKouvK
        ZrvoCwmCYI8AWqYkuPkI0KtXL0HwCDskWdqlCAJvXIosfpN1AgkJgROmjlNfj6sHK8fUiN8gED1uGgEu
        NFGSv8XefNYTxzniHuntjOsliu5nMChOYYA2emTxNlZPVRV2z5xN9Apl1cO/2mAa+rX4uiOs98JUhTcA
        nPSOwjKWfoDgdkwS3PEeWfI8hNs6yV+vazzXxu3dgGUdGKTNiurhv4qIaVYvHGGWxcfH4wigLdJ0uQdO
        pFleX8saiyi7J7B6DE5Gp2DvylKqc1IgBlOzwdiwGgOBhA48txvt4vNgzx7v9fmK2fHjct4kGI/xDXbM
        qqZsV1TRhT21gQ1CxLTKoWoab9wMjiQT7J69xe10PhEX18sdFxc/EV/bzHt2j3A9q4cN4H7WkBMTE455
        TY1/KOd0xF8tSp0jgEdw0+cAF5pLENw4SdzHLgBesBZJkYvYRccLdVpW5PUu0c0/ysdguK8zGNRyTJf4
        5BYnbT0wgHNZA1L1v97DNg1jLSvDoGjBgK/BlIXd7sTJqHZEM1Q+emiaeiPbHk58GzEd4h8UMRp2u9i7
        l+mWwf+ZBfbgOIf2xnAbbR5J+GsDkNVeeNw7TK93v13URVHUATgKdeDSjuc1xi4+D+7fgY3kGDsO3AdP
        9c6Go8Mb7DzwHNktzjJcr7S83jAuJzRV6/olekWSnXjMvBfHbbVg316C66dw3+2S5FkriwJPv3A04w0A
        j6vGxA2wst69e3fHkWIPS6FEj8BHAJfgOWceQb4kPR0OfmHcbmEwXrwdrJdlwcACF1OaDS63u2vyqMjS
        BAzmNAzcVByydVaGF/RayzRm4qgwAyea/Ls7kui+AlMQjHV1HdseWzCATuN2D6qK0pfVYXA7QzBNmo9L
        OsZ81ye8DK7fYFrGK+w5pin4UmMFbnAeplDnfG1CUtR+umm+I2naOfm9omr9cb+LcL/pOHz8zRHA8vk0
        HClmYkDOxznPOd9lYryWNYWlQLyBn7kDhGkcWzc0nX/ucYYsS17WCHCfLIVj84EOj8e92u128g8DGew4
        xuq6mu419Vk6jiSsrLfT4cQU6k1JEqcposg/dScXgeBxx2FvdTteyEdxSL7RJbjP+dDIjfmMx+Ppjgv/
        diheWB50kkfkF9Itelzs8WyKJI3EAH4UR4+xOJqc861SDPLemqJeiR2hW5YVngufTZJkPkmUJKk7Tkav
        wfVrBI903gTUo6hdH8qdgfOaKzXdiGPPddP6u9/KxBGAvz4xMfG8ekmBwLAEn++//Jb5mKXrD5ua/mPs
        uR/B5XEM4rFeS+/ch672wMm2/X4Id0ke90P4/tzkcMaf0zDdbhf/jECRPA5ZFK/lhcgR7+D7Fv6Jb5CS
        f4M4Z+9/aciNd7nOez02mH/5q70ubHD207/LKakXPGXwWuY/tM+43s5/+H2Id3ROigkhhBBCCCGEEEII
        IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
        IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFftm7d
        /hfkMpV71ai15AAAAABJRU5ErkJggg==
</value>
  </data>
</root>